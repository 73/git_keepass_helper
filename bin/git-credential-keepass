#!/usr/bin/env python3
import argparse
import sys
import re
from git_keepass_helper import KDB

# A lot of credit go to:
#  - https://pratz.github.io/custom-git-credential-helper
#  - https://github.com/z00nx/git-credential-keepasshttp


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('kdbx', action="store", type=str,
    help="The location of the keepass file (.kdbx)")
    parser.add_argument('operation', choices=['get', 'store', 'erase'], action="store", type=str,
    help="Git action to be performed (get|store|erase)")
    # parser all arguments
    arguments = parser.parse_args()
    # get credentials
    kdbx = KDB(arguments.kdbx)

    if arguments.operation == "get":
        repo_info_regex = r'(\S+)=(.*)'
        repo_info_string = sys.stdin.read()
        repo = dict(re.findall(repo_info_regex, repo_info_string))

        if 'host' not in repo:
            sys.exit("Host not set\n")

        if repo['protocol'] != 'https':
            sys.exit("Only https supported\n")

        credentials = kdbx.get(repo)

        print("username={0}".format(credentials.username))
        print("password={0}".format(credentials.password))
    elif arguments.operation == "store":
      sys.exit("\"store\" operation not yet implemented\n")
    elif arguments.operation == "erase":
      sys.exit("\"erase\" operation not yet implemented\n")
    else:
      sys.exit("Invalid git operation\n")


if __name__ == "__main__":
   main()
